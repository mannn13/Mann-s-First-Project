# -*- coding: utf-8 -*-
"""river visualization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sydxbJGHvSutIuVEq4uidMlrYOLL0pI5
"""

import folium
from IPython.display import display

# Data for Indian rivers and their tributaries
indian_rivers = {
    "Ganges": {
        "length_km": 2525,
        "coordinates": [(30.0, 85.3), (25.0, 88.0)],
        "tributaries": {
            "Yamuna": [(30.1, 78.4), (25.5, 83.0)],
            "Ghaghara": [(28.5, 80.3), (26.5, 85.0)],
            "Gandak": [(27.0, 84.9), (26.0, 85.5)],
            "Kosi": [(26.6, 85.6), (25.0, 87.0)],
            "Son": [(24.6, 84.0), (23.0, 85.0)],
            "Bhagirathi": [(30.1, 79.0), (29.0, 83.0)],
            "Jamuna": [(28.5, 79.1), (26.0, 82.0)],
        },
    },
    "Brahmaputra": {
        "length_km": 2880,
        "coordinates": [(28.0, 91.0), (26.0, 88.0)],
        "tributaries": {
            "Subansiri": [(27.0, 93.0), (26.5, 88.0)],
            "Dihang": [(27.5, 95.0), (27.0, 92.0)],
            "Manas": [(26.5, 92.5), (26.0, 90.0)],
            "Teesta": [(26.0, 88.5), (25.5, 89.5)],
            "Kameng": [(27.0, 92.0), (26.5, 91.0)],
        },
    },
    "Indus": {
        "length_km": 3180,
        "coordinates": [(35.0, 74.0), (29.0, 72.0)],
        "tributaries": {
            "Jhelum": [(34.0, 74.5), (33.0, 75.0)],
            "Chenab": [(30.0, 75.5), (29.0, 73.0)],
            "Ravi": [(31.0, 74.0), (30.5, 75.0)],
            "Beas": [(31.5, 75.5), (30.0, 74.0)],
            "Sutlej": [(30.5, 75.5), (29.5, 72.5)],
        },
    },
}

# Colors for main rivers and tributaries
main_river_colors = {"Ganges": "blue", "Brahmaputra": "red", "Indus": "green"}
tributary_colors = {
    "Yamuna": "orange",
    "Ghaghara": "purple",
    "Gandak": "pink",
    "Kosi": "cyan",
    "Son": "brown",
    "Bhagirathi": "darkblue",
    "Jamuna": "lightblue",
    "Subansiri": "darkred",
    "Dihang": "lightgreen",
    "Manas": "yellow",
    "Teesta": "violet",
    "Kameng": "gray",
    "Jhelum": "maroon",
    "Chenab": "navy",
    "Ravi": "teal",
    "Beas": "coral",
    "Sutlej": "gold",
}

# Function to display river information
def display_river_info_with_map(river_name):
    if river_name in indian_rivers:
        river_data = indian_rivers[river_name]
        length = river_data["length_km"]
        coordinates = river_data["coordinates"]
        tributaries = river_data["tributaries"]

        print("=" * 40)
        print(f"     Details for {river_name} River")
        print("=" * 40)
        print(f"Length: {length} km")
        print(f"Color: {main_river_colors[river_name].capitalize()}")
        print("=" * 40 + "\n")

        plot_river_on_map(river_name, coordinates, tributaries, length)
    else:
        print(f"Sorry, the river '{river_name}' is not in the dataset.\n")

# Function to plot river and tributaries on the map
def plot_river_on_map(river_name, coordinates, tributaries, length):
    river_map = folium.Map(location=coordinates[0], zoom_start=6)
    river_color = main_river_colors.get(river_name, "gray")
    key_counter = 1
    legend = {}

    # Plot the main river
    folium.PolyLine(
        locations=coordinates,
        color=river_color,
        weight=5,
        popup=f"{river_name} - {length} km",
    ).add_to(river_map)
    folium.Marker(
        location=coordinates[0],
        popup=f"Key: {key_counter}",
        icon=folium.Icon(color=river_color),
    ).add_to(river_map)
    legend[key_counter] = river_name + " (Main River)"
    key_counter += 1

    # Plot tributaries
    for tributary, trib_coords in tributaries.items():
        tributary_color = tributary_colors.get(tributary, "gray")
        folium.PolyLine(
            locations=trib_coords,
            color=tributary_color,
            weight=3,
            popup=f"{tributary} (Tributary)",
        ).add_to(river_map)
        folium.Marker(
            location=trib_coords[0],
            popup=f"Key: {key_counter}",
            icon=folium.Icon(color=tributary_color),
        ).add_to(river_map)
        legend[key_counter] = tributary + " (Tributary of " + river_name + ")"
        key_counter += 1

    # Display the map
    display(river_map)

    # Print legend
    print("Legend (Key -> Name):")
    for key, name in legend.items():
        print(f"{key}: {name}")

    print("\nTributary Color Legend:")
    for tributary, color in tributary_colors.items():
        if tributary in tributaries:
            print(f"{tributary}: {color.capitalize()}")

# Main program loop
while True:
    river_input = input("Enter the name of the river (or type 'exit' to quit): ").strip()
    if river_input.lower() == "exit":
        print("Exiting the program. Goodbye!")
        break
    else:
        display_river_info_with_map(river_input)